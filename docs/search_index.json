[["index.html", "Education Attainment in the US Chapter 1 Introduction", " Education Attainment in the US Yifei Chen and Zujun Peng 2020-12-16 Chapter 1 Introduction Throughout the history, education is always a fundamental subject of the infrastructure for nations around the world since education attainment of citizens is closely related to people’s economic and social life. Moreover, the level of education attainment may vary by country, race, and gender. In this project, we are interested in exploring the various level of education attainment in the United States and the influence on people’s life and decision by different education attainment using the data collected by US Census. To be more specific, we will focus on the exploratory data analysis and data visualization on the data provided by US Census to research on how education attainment differ by gender, race and states as well as how education attainment influences females’ choices of marriage status while giving birth and people’s earning in the United States. The purpose of our project is to let the readers have an comprehensive understanding of the education attainment status in the United States and how pursuing higher education benefits people’s earning and thus improve their social and economic life. "],["data-sources.html", "Chapter 2 Data Sources", " Chapter 2 Data Sources Since every member in our group prefer to work on a dataset that has practical meaning and we are both interested in, we are all responsible for collecting the data. We first decide some topics that we think might be suitable for our final project and search for data set on this topics. After that, we compare data sets that we collect and finally decide to use the data on the topic of education attainment provided by US Census. Data Source Link: https://data.census.gov/cedsci/table?q=Education&amp;tid=ACSST1Y2019.S1501&amp;moe=false&amp;tp=false&amp;hidePreview=true https://data.census.gov/cedsci/table?q=Education&amp;tid=ACSDT1Y2019.B13014&amp;moe=false&amp;tp=false&amp;hidePreview=false From the data source above, we divide the data that we collect into 5 datasets. The first dataset called “2015-2019education” records the education attainment in the US from 2015 - 2019 and how education level differs by gender over these year. The second dataset called “2015-2019earning” contains data on the median earnings of people in different education levels. The third dataset called “race” covers information on how the level education attainment in the United States is varied by race and gender within each race. The fourth dataset call “states” contains data on education attainment and median earning differed by states. Finally the last data set called “births” has data on the education attainment of women from age 15 to 50 who gave birth and did not give birth in the last 12 months. The variables these datasets shown in R after reading file and data transformation are (some variables may only appear in some of the datasets and some variables may appear in all dataset): Year(numeric):Year from 2015 to 2019. Estimate(numeric):Number of people in particular category. Earning(numeric): Median earning of the populaiton in particular category. Population(numeric): Population Education(char): Education attainment. Gender(char): Gender. Race(char): Race. States(char): State names in the United States. Give_birth: Whether a women give birth or not in the past 12 months. Marriage:Marriage status. A problem with the data is that the form of the orginal dataset is reader friendly but not plotting-friendly using R. For example, the education attainment recorded in the data set may have different numbers of categories for race specific and the total population. To be more specific, there are five levels of education attainment for people in age 25 year of older, but there are two levels of education attainment reported when we want to focus on races to see how education attainment is differed by race. To fix it, we need to split orignal file into separate datasets and conduct data transformation to combine or split data to build data frames that are user-friendly in R. Please see the next section of data transformation to understand how data is clean and organized. "],["data-cleaning.html", "Chapter 3 Data Cleaning", " Chapter 3 Data Cleaning The data sets that we gained from the official census website are in the forms of csv files before the transformation. Because of the unique characteristic of the census data, which are all count values with long descriptions, we primarily focus on transforming and pre-processing the data set into the version that we could apply in visualizing and analysis. It mainly contains the following steps: Read csv files as dataframes Transform the ‘messy’ data set into a ‘tidy’ one Formalize and abbreviate the categorical values Combine some groups (with relatively few frequencies) into one group Let’s use one of our data sets, ‘states’ as an example. After we read the csv files into data frame in R and extract the columns that we primarily focus on, the data contains multiple columns indicating education levels, with long and complicated names. states &lt;- read.csv(&quot;./data/states.csv&quot;, na.strings = &quot;N/A&quot;) #extract columns for education attainment states_education &lt;- states[,1:7] ## [1] &quot;State&quot; ## [2] &quot;Total&quot; ## [3] &quot;Less.than.high.school.graduate&quot; ## [4] &quot;High.school.graduate..includes.equivalency.&quot; ## [5] &quot;Some.college.or.associate.s.degree&quot; ## [6] &quot;Bachelor.s.degree&quot; ## [7] &quot;Graduate.or.professional.degree&quot; To have a tidy data set, we transform those columns indicating the education levels into one column: states_education &lt;- states_education %&gt;% pivot_longer(cols =!State ,names_to = &quot;Education&quot;,values_to = &quot;Population&quot;) ## # A tibble: 5 x 3 ## State Education Population ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 Alabama Total 3360058 ## 2 Alabama Less.than.high.school.graduate 433073 ## 3 Alabama High.school.graduate..includes.equivalency. 1039241 ## 4 Alabama Some.college.or.associate.s.degree 1002387 ## 5 Alabama Bachelor.s.degree 547975 However, as we can see from the above subset of the dataset, some values in the ‘Education’ columns are long and complicated. It might create some issues for the following data visualization. Therefore, we abbreviate those values into shorter names. Their full names are indicated in the footnote of each graph using those abbreviations for clarification purpose. states_education &lt;- abbreviate(states_education,total = TRUE) head(states_education) ## # A tibble: 6 x 3 ## State Education Population ## &lt;chr&gt; &lt;fct&gt; &lt;int&gt; ## 1 Alabama Total 3360058 ## 2 Alabama Less Than High School 433073 ## 3 Alabama High School 1039241 ## 4 Alabama Some Colleges 1002387 ## 5 Alabama Bachelor Degree 547975 ## 6 Alabama Advanced Degree 337382 The above Step 1-3 are repeated for each data set we use. For some data sets containing multiple categories, some of which have relativel low frequencies, we combine those categories as one group. For instance, in the data set counting the number of people with different education attainments in various races, we combine the race groups like ‘Native Hawaiian and Other Pacific Islander alone’, ‘American Indian or Alaska Native alone’, and other race groups into one big group called ‘Other’. "],["missing-values.html", "Chapter 4 Missing values", " Chapter 4 Missing values There are no missing values in the data sets because we gain the count of the population with different education attainment and other backgrounds instead of the case data set. "],["results.html", "Chapter 5 Results", " Chapter 5 Results edu2019 &lt;- education[education$Year==2019,] dt &lt;- xtabs(Estimate ~ Education + Gender, data=edu2019) vcd::mosaic(dt, direction = c(&quot;v&quot;, &quot;h&quot;), gp=gpar(fill=c(&quot;#fbb4ae&quot;,&quot;#fbb4ae&quot;,&quot;#fbb4ae&quot;,&quot;#fbb4ae&quot;,&quot;#fbb4ae&quot;,&quot;#b3cde3&quot;,&quot;#b3cde3&quot;,&quot;#b3cde3&quot;,&quot;#b3cde3&quot;,&quot;#b3cde3&quot;)), labeling = labeling_border(rot_labels = c(45, 0),abbreviate_labs = c(2, 1)), main= &quot;Mosaic Plot of Educaton Attainment and Gender&quot;) race_total &lt;- race[race$Gender==&quot;Total&quot;,] ylab &lt;- c(0, 50, 100, 150) ggplot(race_total)+ geom_col(aes(x=Race,y=Estimate,fill=Education),position =&quot;dodge&quot;)+ xlab(&quot;Race&quot;)+ ylab(&quot;Population&quot;)+ ggtitle(&quot;Group Bar Chart of 2019 Education Attainment by Race&quot;)+ scale_y_continuous(labels = paste0(ylab, &quot;M&quot;), breaks = 10^6 * ylab)+ scale_fill_brewer(palette = 1) + theme_light(14)+ theme(axis.text.x = element_text(angle=20, vjust=0.5)) # Function to change counts to cases # Source: http://www.cookbook-r.com/Manipulating_data/Converting_between_data_frames_and_contingency_tables/ countsToCases &lt;- function(x, countcol = &quot;Estimate&quot;) { idx &lt;- rep.int(seq_len(nrow(x)), x[[countcol]]) x[[countcol]] &lt;- NULL x[idx, ] } race_gender &lt;- race[race$Gender !=&quot;Total&quot;,] #mosaic plot: x = race, y = gender, facet by education #Two ways: use vcd mosaic plot (could not facet) # use ggplot, but it needs data frame type instead of contingency table (take long time) # exceeds time limit race_gender &lt;- race_gender[race_gender$Education != &quot;Total&quot;,] #race_gender_df &lt;- countsToCases(race_gender, countcol = &quot;Estimate&quot;) #ggplot(race_gender_df) + # geom_mosaic(x = product(Race, Gender)) + # facet_grid(Education~.) #男女比例 #check value ggplot(race_gender) + geom_col(aes(x = fct_rev(Race),y=Estimate, fill = Gender), position = &quot;fill&quot;) + xlab(&quot;Race&quot;) + theme(legend.position = &quot;bottom&quot;) + coord_flip()+ guides(fill = guide_legend(reverse = TRUE)) + facet_wrap(~Education, ncol = 1) + ylab(&quot;proportion&quot;) + scale_fill_brewer(palette = &quot;Pastel1&quot;) + ggtitle(&quot;Proportional breakdown of Gender for each race, faceted on Education Attainment&quot;) #add legend！！！ earning2019 &lt;- earning[earning$Year==2019,] earning_total&lt;- earning2019$Earning[earning2019$Education==&quot;Total&quot;] earning2019 &lt;- earning2019[earning2019$Education!= &quot;Total&quot;,] earning2019%&gt;% group_by(Education)%&gt;% mutate(total_earn =earning_total )%&gt;% ungroup()%&gt;% ggplot()+ geom_col(aes(x=Education,y=Earning))+ geom_hline(aes(yintercept=total_earn),col=&quot;red&quot;)+ scale_fill_brewer(palette = 3,direction = -1)+ geom_text(aes(label =&quot;Median Earning for all Population&quot;,x = 0.9, y = total_earn+22000),color= &quot;red&quot;,label.size = 0.1)+ coord_flip()+ facet_wrap(~Gender, ncol = 1) + ggtitle(&quot;Median Earning in 2019 based on Education Attainment and Gender&quot;) ## Warning: Ignoring unknown parameters: label.size #change birth csv file #title #check value ggplot(birth) + geom_col(aes(x = as.factor(Marriage), y = Estimate, fill = fct_rev(Education)), position = &quot;fill&quot;)+ coord_flip() + theme_light(15)+ theme(legend.position = &quot;bottom&quot;) + guides(fill = guide_legend(reverse = TRUE)) + scale_fill_brewer(palette = 3,direction = -1)+ theme(legend.title = element_text(size = 7),legend.text = element_text(size=7))+ labs(fill = &quot;Education&quot;)+ facet_wrap(~Give_birth, ncol = 1)+ ylab(&quot;proportion&quot;) + xlab(&quot;Marriage Status&quot;)+ ggtitle(&quot;2019 Proportional breakdown of education attainment on \\n marriage status,faceted on giving birth or not&quot;) new_states&lt;-states %&gt;% group_by(State)%&gt;% mutate(bachelor_higher = (Population[Education==&quot;Bachelor Degree&quot;]+Population[Education==&quot;Advanced Degree&quot;])/Population[Education == &quot;Total&quot;])%&gt;% mutate(abb = state2abbr(State))%&gt;% mutate(median_earning = Earning[Education==&quot;Total&quot;])%&gt;% ungroup() statesDFrame&lt;-na.omit(new_states) rate &lt;- unique(statesDFrame$bachelor_higher) earning &lt;- unique(statesDFrame$median_earning) statesDF&lt;- data.frame(cbind(rate,earning)) row.names(statesDF) &lt;- unique(statesDFrame$abb) panelDesc &lt;- data.frame( type=c(&quot;mapmedian&quot;,&quot;id&quot;,&quot;dot&quot;,&quot;dot&quot;), lab1=c(&quot;&quot;,&quot;&quot;,&quot;Rate of Bachelor Degree or Higher in 2019&quot;,&quot;Medain Earning in 2019&quot;), lab3=c(&quot;&quot;,&quot;&quot;,&quot;Rate of Bachelor Degree or Higher&quot;,&quot;Median Earning&quot;), col1=c(NA,NA,1,2) ) ExTitle &lt;- c( &quot;Dot Plot for Rate of Bachelor Degree or Higher by States in 2019&quot;) #quartz(width=7.5, height = 10, dpi = 72, pointsize = 10) #pdf(file=&quot;EX4-Scatter-Dots.pdf&quot;,width=7.5,height=10) micromapST(statesDF,panelDesc,sortVar=1,ascend=FALSE,title=ExTitle) ## End of micromapST processing. ## No warnings were logged. ## No stop messages were logged. ## ## [1] &quot;micromapST Ends&quot; Figure 5.1: your caption "],["interactive-component.html", "Chapter 6 Interactive component", " Chapter 6 Interactive component new &lt;-education %&gt;%group_by(Year, Education) %&gt;% summarise(Estimate = sum(Estimate)) %&gt;% mutate(prop = Estimate/sum(Estimate))%&gt;% ungroup() ## `summarise()` regrouping output by &#39;Year&#39; (override with `.groups` argument) edu2015 &lt;- new$prop[new$Year==2015] edu2016 &lt;- new$prop[new$Year==2016] edu2017 &lt;- new$prop[new$Year==2017] edu2018 &lt;- new$prop[new$Year==2018] edu2019 &lt;- new$prop[new$Year==2019] eduD3 &lt;- data.frame(cbind(edu2015,edu2016,edu2017,edu2018,edu2019)) #write.csv(eduD3,&quot;./data/eduD3.csv&quot;) attach(eduD3) ## The following objects are masked _by_ .GlobalEnv: ## ## edu2015, edu2016, edu2017, edu2018, edu2019 Less than High School High School Graduate Some College or Associate Degree Bachelor’s Degree Graduate or Professional Degree "],["conclustion.html", "Chapter 7 Conclustion", " Chapter 7 Conclustion "]]
